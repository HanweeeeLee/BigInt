{"identifier":{"url":"doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/AdditiveArithmetic-Implementations","interfaceLanguage":"swift"},"kind":"article","sections":[],"hierarchy":{"paths":[["doc:\/\/BigInt\/documentation\/BigInt","doc:\/\/BigInt\/documentation\/BigInt\/BigUInt"]]},"metadata":{"modules":[{"name":"BigInt"}],"title":"AdditiveArithmetic Implementations","role":"collectionGroup"},"schemaVersion":{"major":0,"patch":0,"minor":3},"topicSections":[{"generated":true,"title":"Operators","identifiers":["doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/+(_:)","doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/+=(_:_:)-3dht1","doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/-=(_:_:)-47mle"]},{"identifiers":["doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/zero"],"generated":true,"title":"Type Properties"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/bigint\/biguint\/additivearithmetic-implementations"]}],"references":{"doc://BigInt/documentation/BigInt":{"title":"BigInt","abstract":[],"role":"collection","identifier":"doc:\/\/BigInt\/documentation\/BigInt","url":"\/documentation\/bigint","type":"topic","kind":"symbol"},"doc://BigInt/documentation/BigInt/BigUInt/+=(_:_:)-3dht1":{"kind":"symbol","identifier":"doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/+=(_:_:)-3dht1","type":"topic","title":"+=(_:_:)","url":"\/documentation\/bigint\/biguint\/+=(_:_:)-3dht1","abstract":[],"role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"+=","kind":"identifier"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":")","kind":"text"}]},"doc://BigInt/documentation/BigInt/BigUInt":{"url":"\/documentation\/bigint\/biguint","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"BigUInt","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"BigUInt","kind":"identifier"}],"abstract":[{"text":"An arbitary precision unsigned integer type, also known as a “big integer”.","type":"text"}],"identifier":"doc:\/\/BigInt\/documentation\/BigInt\/BigUInt","type":"topic","kind":"symbol","title":"BigUInt"},"doc://BigInt/documentation/BigInt/BigUInt/+(_:)":{"kind":"symbol","role":"symbol","title":"+(_:)","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"+"},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"url":"\/documentation\/bigint\/biguint\/+(_:)","type":"topic","identifier":"doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/+(_:)","abstract":[]},"doc://BigInt/documentation/BigInt/BigUInt/-=(_:_:)-47mle":{"abstract":[],"identifier":"doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/-=(_:_:)-47mle","type":"topic","role":"symbol","title":"-=(_:_:)","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"-="},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":")"}],"url":"\/documentation\/bigint\/biguint\/-=(_:_:)-47mle"},"doc://BigInt/documentation/BigInt/BigUInt/zero":{"abstract":[],"identifier":"doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/zero","type":"topic","role":"symbol","title":"zero","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"zero","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"url":"\/documentation\/bigint\/biguint\/zero","conformance":{"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"ExpressibleByIntegerLiteral"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]}}}}