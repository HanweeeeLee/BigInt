{"kind":"symbol","schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/BigInt\/documentation\/BigInt\/BigUInt"},"sections":[],"variants":[{"paths":["\/documentation\/bigint\/biguint"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/BigInt\/s18AdditiveArithmeticP","doc:\/\/BigInt\/Sz","doc:\/\/BigInt\/SL","doc:\/\/BigInt\/s8CopyableP","doc:\/\/BigInt\/s34CustomPlaygroundDisplayConvertibleP","doc:\/\/BigInt\/s23CustomStringConvertibleP","doc:\/\/BigInt\/Se","doc:\/\/BigInt\/SE","doc:\/\/BigInt\/SQ","doc:\/\/BigInt\/s43ExpressibleByExtendedGraphemeClusterLiteralP","doc:\/\/BigInt\/s27ExpressibleByIntegerLiteralP","doc:\/\/BigInt\/s26ExpressibleByStringLiteralP","doc:\/\/BigInt\/s33ExpressibleByUnicodeScalarLiteralP","doc:\/\/BigInt\/SH","doc:\/\/BigInt\/Sj","doc:\/\/BigInt\/s8SendableP","doc:\/\/BigInt\/Sx","doc:\/\/BigInt\/SU"],"kind":"relationships","type":"conformsTo","title":"Conforms To"}],"metadata":{"symbolKind":"struct","modules":[{"name":"BigInt"}],"title":"BigUInt","roleHeading":"Structure","navigatorTitle":[{"kind":"identifier","text":"BigUInt"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"BigUInt","kind":"identifier"}],"role":"symbol","externalID":"s:6BigInt0A4UIntV"},"topicSections":[{"generated":true,"title":"Initializers","identifiers":["doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/init()-sbkm","doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/init(_:)-33kch","doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/init(_:)-4ohlu","doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/init(_:radix:)","doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/init(words:)-2g41y","doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/init(words:)-33w61"],"anchor":"Initializers"},{"title":"Instance Properties","generated":true,"identifiers":["doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/isZero","doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/leadingZeroBitCount"],"anchor":"Instance-Properties"},{"identifiers":["doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/decrement(shiftedBy:)","doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/greatestCommonDivisor(with:)","doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/inverse(_:)","doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/isPrime(rounds:)","doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/isStrongProbablePrime(_:)","doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/multiplied(by:)","doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/multiplied(byWord:)","doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/multiply(byWord:)","doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/multiplyAndAdd(_:_:shiftedBy:)","doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/power(_:)","doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/power(_:modulus:)","doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/serialize()","doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/squareRoot()","doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/subtract(_:shiftedBy:)","doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/subtractReportingOverflow(_:shiftedBy:)","doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/subtracting(_:shiftedBy:)","doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/subtractingReportingOverflow(_:)","doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/subtractingReportingOverflow(_:shiftedBy:)"],"title":"Instance Methods","generated":true,"anchor":"Instance-Methods"},{"anchor":"Subscripts","generated":true,"identifiers":["doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/subscript(bitAt:)"],"title":"Subscripts"},{"identifiers":["doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/Word"],"title":"Type Aliases","anchor":"Type-Aliases","generated":true},{"title":"Type Properties","generated":true,"anchor":"Type-Properties","identifiers":["doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/directMultiplicationLimit"]},{"identifiers":["doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/compare(_:_:)","doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/randomInteger(lessThan:)","doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/randomInteger(lessThan:using:)","doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/randomInteger(withExactWidth:)","doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/randomInteger(withExactWidth:using:)","doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/randomInteger(withMaximumWidth:)","doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/randomInteger(withMaximumWidth:using:)"],"anchor":"Type-Methods","title":"Type Methods","generated":true},{"generated":true,"identifiers":["doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/AdditiveArithmetic-Implementations","doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/BinaryInteger-Implementations","doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/Comparable-Implementations","doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/CustomPlaygroundDisplayConvertible-Implementations","doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/CustomStringConvertible-Implementations","doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/Decodable-Implementations","doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/Encodable-Implementations","doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/Equatable-Implementations","doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/ExpressibleByExtendedGraphemeClusterLiteral-Implementations","doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/ExpressibleByIntegerLiteral-Implementations","doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/ExpressibleByStringLiteral-Implementations","doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/ExpressibleByUnicodeScalarLiteral-Implementations","doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/Hashable-Implementations","doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/Numeric-Implementations","doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/Strideable-Implementations","doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/UnsignedInteger-Implementations"],"title":"Default Implementations","anchor":"Default-Implementations"}],"hierarchy":{"paths":[["doc:\/\/BigInt\/documentation\/BigInt"]]},"abstract":[{"text":"An arbitary precision unsigned integer type, also known as a “big integer”.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"BigUInt"}],"platforms":["macOS"]}]},{"content":[{"text":"Overview","anchor":"overview","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"text":"Operations on big integers never overflow, but they may take a long time to execute.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"The amount of memory (and address space) available is the only constraint to the magnitude of these numbers."}]},{"type":"paragraph","inlineContent":[{"text":"This particular big integer type uses base-2^64 digits to represent integers; you can think of it as a wrapper","type":"text"},{"type":"text","text":" "},{"text":"around ","type":"text"},{"type":"codeVoice","code":"Array<UInt64>"},{"type":"text","text":". (In fact, "},{"type":"codeVoice","code":"BigUInt"},{"text":" only uses an array if there are more than two digits.)","type":"text"}]}],"kind":"content"}],"references":{"doc://BigInt/SH":{"type":"unresolvable","identifier":"doc:\/\/BigInt\/SH","title":"Swift.Hashable"},"doc://BigInt/documentation/BigInt/BigUInt/subtract(_:shiftedBy:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"subtract"},{"kind":"text","text":"("},{"preciseIdentifier":"s:6BigInt0A4UIntV","text":"BigUInt","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"shiftedBy","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"text":")","kind":"text"}],"role":"symbol","identifier":"doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/subtract(_:shiftedBy:)","abstract":[{"text":"Subtract ","type":"text"},{"type":"codeVoice","code":"other"},{"type":"text","text":" from this integer in place."},{"text":" ","type":"text"},{"code":"other","type":"codeVoice"},{"text":" is shifted ","type":"text"},{"type":"codeVoice","code":"shift"},{"type":"text","text":" digits to the left before being subtracted."}],"kind":"symbol","url":"\/documentation\/bigint\/biguint\/subtract(_:shiftedby:)","type":"topic","title":"subtract(_:shiftedBy:)"},"doc://BigInt/documentation/BigInt/BigUInt/init(words:)-33w61":{"identifier":"doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/init(words:)-33w61","url":"\/documentation\/bigint\/biguint\/init(words:)-33w61","abstract":[{"type":"text","text":"Initializes a new BigUInt with the specified digits. The digits are ordered from least to most significant."}],"title":"init(words:)","kind":"symbol","type":"topic","role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"words"},{"text":": [","kind":"text"},{"preciseIdentifier":"s:6BigInt0A4UIntV","text":"BigUInt","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Word","kind":"typeIdentifier","preciseIdentifier":"s:6BigInt0A4UIntV4Worda"},{"text":"])","kind":"text"}]},"doc://BigInt/documentation/BigInt/BigUInt/randomInteger(withMaximumWidth:)":{"kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"randomInteger"},{"kind":"text","text":"("},{"kind":"externalParam","text":"withMaximumWidth"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:6BigInt0A4UIntV","text":"BigUInt","kind":"typeIdentifier"}],"identifier":"doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/randomInteger(withMaximumWidth:)","url":"\/documentation\/bigint\/biguint\/randominteger(withmaximumwidth:)","role":"symbol","title":"randomInteger(withMaximumWidth:)","type":"topic","abstract":[{"text":"Create a big unsigned integer consisting of ","type":"text"},{"type":"codeVoice","code":"width"},{"text":" uniformly distributed random bits.","type":"text"}]},"doc://BigInt/s8CopyableP":{"identifier":"doc:\/\/BigInt\/s8CopyableP","title":"Swift.Copyable","type":"unresolvable"},"doc://BigInt/documentation/BigInt/BigUInt/Hashable-Implementations":{"kind":"article","identifier":"doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/Hashable-Implementations","url":"\/documentation\/bigint\/biguint\/hashable-implementations","role":"collectionGroup","title":"Hashable Implementations","type":"topic","abstract":[]},"doc://BigInt/SL":{"identifier":"doc:\/\/BigInt\/SL","title":"Swift.Comparable","type":"unresolvable"},"doc://BigInt/documentation/BigInt/BigUInt/init(_:)-33kch":{"kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:SW","text":"UnsafeRawBufferPointer","kind":"typeIdentifier"},{"text":")","kind":"text"}],"identifier":"doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/init(_:)-33kch","url":"\/documentation\/bigint\/biguint\/init(_:)-33kch","role":"symbol","title":"init(_:)","type":"topic","abstract":[{"text":"Initialize a BigInt from bytes accessed from an UnsafeRawBufferPointer","type":"text"}]},"doc://BigInt/documentation/BigInt/BigUInt/Comparable-Implementations":{"identifier":"doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/Comparable-Implementations","title":"Comparable Implementations","abstract":[],"type":"topic","kind":"article","url":"\/documentation\/bigint\/biguint\/comparable-implementations","role":"collectionGroup"},"doc://BigInt/documentation/BigInt/BigUInt/serialize()":{"url":"\/documentation\/bigint\/biguint\/serialize()","identifier":"doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/serialize()","abstract":[{"text":"Return a ","type":"text"},{"type":"codeVoice","code":"Data"},{"type":"text","text":" value that contains the base-256 representation of this integer, in network (big-endian) byte order."}],"title":"serialize()","kind":"symbol","type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"serialize"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DataV","text":"Data"}]},"https://en.wikipedia.org/wiki/Probable_prime":{"titleInlineContent":[{"type":"text","text":"strong probable prime test"}],"url":"https:\/\/en.wikipedia.org\/wiki\/Probable_prime","type":"link","identifier":"https:\/\/en.wikipedia.org\/wiki\/Probable_prime","title":"strong probable prime test"},"doc://BigInt/documentation/BigInt/BigUInt/init(_:radix:)":{"url":"\/documentation\/bigint\/biguint\/init(_:radix:)","identifier":"doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/init(_:radix:)","abstract":[{"type":"text","text":"Initialize a big integer from an ASCII representation in a given radix. Numerals above "},{"type":"codeVoice","code":"9"},{"type":"text","text":" are represented by"},{"type":"text","text":" "},{"text":"letters from the English alphabet.","type":"text"}],"title":"init(_:radix:)","kind":"symbol","type":"topic","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"?<","kind":"text"},{"text":"S","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":", "},{"kind":"externalParam","text":"radix"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"doc://BigInt/documentation/BigInt/BigUInt/power(_:modulus:)":{"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"power","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:6BigInt0A4UIntV","text":"BigUInt","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"modulus","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:6BigInt0A4UIntV","text":"BigUInt"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:6BigInt0A4UIntV","kind":"typeIdentifier","text":"BigUInt"}],"identifier":"doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/power(_:modulus:)","url":"\/documentation\/bigint\/biguint\/power(_:modulus:)","role":"symbol","title":"power(_:modulus:)","type":"topic","abstract":[{"text":"Returns the remainder of this integer raised to the power ","type":"text"},{"type":"codeVoice","code":"exponent"},{"type":"text","text":" in modulo arithmetic under "},{"type":"codeVoice","code":"modulus"},{"text":".","type":"text"}]},"doc://BigInt/s26ExpressibleByStringLiteralP":{"title":"Swift.ExpressibleByStringLiteral","identifier":"doc:\/\/BigInt\/s26ExpressibleByStringLiteralP","type":"unresolvable"},"doc://BigInt/documentation/BigInt/BigUInt/subscript(bitAt:)":{"kind":"symbol","fragments":[{"kind":"keyword","text":"subscript"},{"kind":"text","text":"("},{"text":"bitAt","kind":"externalParam"},{"text":" _: ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"kind":"text","text":") -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"identifier":"doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/subscript(bitAt:)","url":"\/documentation\/bigint\/biguint\/subscript(bitat:)","role":"symbol","title":"subscript(bitAt:)","type":"topic","abstract":[]},"doc://BigInt/documentation/BigInt/BigUInt/Strideable-Implementations":{"title":"Strideable Implementations","role":"collectionGroup","type":"topic","kind":"article","identifier":"doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/Strideable-Implementations","url":"\/documentation\/bigint\/biguint\/strideable-implementations","abstract":[]},"doc://BigInt/documentation/BigInt/BigUInt/randomInteger(withExactWidth:using:)":{"identifier":"doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/randomInteger(withExactWidth:using:)","kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"randomInteger"},{"text":"<","kind":"text"},{"text":"RNG","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"withExactWidth"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":", "},{"kind":"externalParam","text":"using"},{"kind":"text","text":": "},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RNG","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"BigUInt","preciseIdentifier":"s:6BigInt0A4UIntV"}],"type":"topic","title":"randomInteger(withExactWidth:using:)","url":"\/documentation\/bigint\/biguint\/randominteger(withexactwidth:using:)","abstract":[{"type":"text","text":"Create a big unsigned integer consisting of "},{"code":"width-1","type":"codeVoice"},{"text":" uniformly distributed random bits followed by a one bit.","type":"text"}],"role":"symbol"},"doc://BigInt/documentation/BigInt/BigUInt/multiplied(byWord:)":{"identifier":"doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/multiplied(byWord:)","url":"\/documentation\/bigint\/biguint\/multiplied(byword:)","abstract":[{"type":"text","text":"Multiply this big integer by a single Word, and return the result."}],"title":"multiplied(byWord:)","kind":"symbol","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"multiplied","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"byWord"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:6BigInt0A4UIntV","text":"BigUInt"},{"kind":"text","text":"."},{"text":"Word","kind":"typeIdentifier","preciseIdentifier":"s:6BigInt0A4UIntV4Worda"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:6BigInt0A4UIntV","text":"BigUInt","kind":"typeIdentifier"}]},"doc://BigInt/documentation/BigInt/BigUInt/Word":{"title":"BigUInt.Word","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"text":"Word","kind":"identifier"}],"navigatorTitle":[{"text":"Word","kind":"identifier"}],"role":"symbol","url":"\/documentation\/bigint\/biguint\/word","kind":"symbol","identifier":"doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/Word","type":"topic","abstract":[{"type":"text","text":"The type representing a digit in "},{"type":"codeVoice","code":"BigUInt"},{"type":"text","text":"’s underlying number system."}]},"doc://BigInt/documentation/BigInt/BigUInt/ExpressibleByStringLiteral-Implementations":{"kind":"article","identifier":"doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/ExpressibleByStringLiteral-Implementations","url":"\/documentation\/bigint\/biguint\/expressiblebystringliteral-implementations","role":"collectionGroup","title":"ExpressibleByStringLiteral Implementations","type":"topic","abstract":[]},"doc://BigInt/documentation/BigInt/BigUInt/randomInteger(lessThan:using:)":{"identifier":"doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/randomInteger(lessThan:using:)","url":"\/documentation\/bigint\/biguint\/randominteger(lessthan:using:)","abstract":[{"type":"text","text":"Create a uniformly distributed random unsigned integer that’s less than the specified limit."}],"title":"randomInteger(lessThan:using:)","kind":"symbol","type":"topic","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"randomInteger"},{"kind":"text","text":"<"},{"text":"RNG","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"lessThan","kind":"externalParam"},{"kind":"text","text":": "},{"text":"BigUInt","kind":"typeIdentifier","preciseIdentifier":"s:6BigInt0A4UIntV"},{"text":", ","kind":"text"},{"text":"using","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"RNG"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:6BigInt0A4UIntV","kind":"typeIdentifier","text":"BigUInt"}]},"doc://BigInt/documentation/BigInt/BigUInt/isPrime(rounds:)":{"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"isPrime","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"rounds"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"identifier":"doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/isPrime(rounds:)","url":"\/documentation\/bigint\/biguint\/isprime(rounds:)","role":"symbol","title":"isPrime(rounds:)","type":"topic","abstract":[{"text":"Returns true if this integer is probably prime. Returns false if this integer is definitely not prime.","type":"text"}]},"doc://BigInt/SU":{"identifier":"doc:\/\/BigInt\/SU","title":"Swift.UnsignedInteger","type":"unresolvable"},"https://en.wikipedia.org/wiki/Extended_Euclidean_algorithm#Modular_integers":{"identifier":"https:\/\/en.wikipedia.org\/wiki\/Extended_Euclidean_algorithm#Modular_integers","title":"multiplicative inverse of this integer in modulo modulus arithmetic","titleInlineContent":[{"text":"multiplicative inverse of this integer in modulo ","type":"text"},{"type":"codeVoice","code":"modulus"},{"text":" arithmetic","type":"text"}],"url":"https:\/\/en.wikipedia.org\/wiki\/Extended_Euclidean_algorithm#Modular_integers","type":"link"},"doc://BigInt/s34CustomPlaygroundDisplayConvertibleP":{"identifier":"doc:\/\/BigInt\/s34CustomPlaygroundDisplayConvertibleP","title":"Swift.CustomPlaygroundDisplayConvertible","type":"unresolvable"},"doc://BigInt/documentation/BigInt/BigUInt/ExpressibleByUnicodeScalarLiteral-Implementations":{"kind":"article","identifier":"doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/ExpressibleByUnicodeScalarLiteral-Implementations","url":"\/documentation\/bigint\/biguint\/expressiblebyunicodescalarliteral-implementations","role":"collectionGroup","title":"ExpressibleByUnicodeScalarLiteral Implementations","type":"topic","abstract":[]},"doc://BigInt/documentation/BigInt/BigUInt/leadingZeroBitCount":{"identifier":"doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/leadingZeroBitCount","url":"\/documentation\/bigint\/biguint\/leadingzerobitcount","abstract":[{"text":"The number of leading zero bits in the binary representation of this integer in base ","type":"text"},{"type":"codeVoice","code":"2^(Word.bitWidth)"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"This is useful when you need to normalize a ","type":"text"},{"type":"codeVoice","code":"BigUInt"},{"type":"text","text":" such that the top bit of its most significant word is 1."}],"title":"leadingZeroBitCount","kind":"symbol","type":"topic","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"leadingZeroBitCount","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"}]},"doc://BigInt/documentation/BigInt/BigUInt/randomInteger(withMaximumWidth:using:)":{"title":"randomInteger(withMaximumWidth:using:)","url":"\/documentation\/bigint\/biguint\/randominteger(withmaximumwidth:using:)","abstract":[{"type":"text","text":"Create a big unsigned integer consisting of "},{"type":"codeVoice","code":"width"},{"type":"text","text":" uniformly distributed random bits."}],"role":"symbol","kind":"symbol","type":"topic","identifier":"doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/randomInteger(withMaximumWidth:using:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"randomInteger"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"RNG"},{"text":">(","kind":"text"},{"text":"withMaximumWidth","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"using","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"RNG"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:6BigInt0A4UIntV","text":"BigUInt"}]},"doc://BigInt/s8SendableP":{"type":"unresolvable","title":"Swift.Sendable","identifier":"doc:\/\/BigInt\/s8SendableP"},"doc://BigInt/documentation/BigInt/BigUInt/subtractingReportingOverflow(_:shiftedBy:)":{"identifier":"doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/subtractingReportingOverflow(_:shiftedBy:)","url":"\/documentation\/bigint\/biguint\/subtractingreportingoverflow(_:shiftedby:)","abstract":[{"type":"text","text":"Subtract "},{"code":"other","type":"codeVoice"},{"text":" from this integer, returning the difference and a flag indicating arithmetic overflow.","type":"text"},{"type":"text","text":" "},{"code":"other","type":"codeVoice"},{"type":"text","text":" is shifted "},{"type":"codeVoice","code":"shift"},{"text":" digits to the left before being subtracted.","type":"text"}],"title":"subtractingReportingOverflow(_:shiftedBy:)","kind":"symbol","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"subtractingReportingOverflow","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:6BigInt0A4UIntV","text":"BigUInt","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"shiftedBy"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"text":") -> (partialValue","kind":"text"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:6BigInt0A4UIntV","text":"BigUInt","kind":"typeIdentifier"},{"text":", overflow","kind":"text"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":")"}]},"doc://BigInt/Sx":{"identifier":"doc:\/\/BigInt\/Sx","title":"Swift.Strideable","type":"unresolvable"},"doc://BigInt/documentation/BigInt/BigUInt/init(_:)-4ohlu":{"abstract":[{"type":"text","text":"Initializes an integer from the bits stored inside a piece of "},{"type":"codeVoice","code":"Data"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"The data is assumed to be in network (big-endian) byte order.","type":"text"}],"title":"init(_:)","url":"\/documentation\/bigint\/biguint\/init(_:)-4ohlu","identifier":"doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/init(_:)-4ohlu","kind":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DataV","text":"Data"},{"kind":"text","text":")"}],"type":"topic","role":"symbol"},"doc://BigInt/s23CustomStringConvertibleP":{"identifier":"doc:\/\/BigInt\/s23CustomStringConvertibleP","title":"Swift.CustomStringConvertible","type":"unresolvable"},"doc://BigInt/documentation/BigInt/BigUInt/subtractReportingOverflow(_:shiftedBy:)":{"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"subtractReportingOverflow","kind":"identifier"},{"text":"(","kind":"text"},{"text":"BigUInt","kind":"typeIdentifier","preciseIdentifier":"s:6BigInt0A4UIntV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"shiftedBy"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"identifier":"doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/subtractReportingOverflow(_:shiftedBy:)","url":"\/documentation\/bigint\/biguint\/subtractreportingoverflow(_:shiftedby:)","role":"symbol","title":"subtractReportingOverflow(_:shiftedBy:)","type":"topic","abstract":[{"text":"Subtract ","type":"text"},{"type":"codeVoice","code":"other"},{"text":" from this integer in place, and return a flag indicating if the operation caused an","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"arithmetic overflow. "},{"code":"other","type":"codeVoice"},{"type":"text","text":" is shifted "},{"type":"codeVoice","code":"shift"},{"type":"text","text":" digits to the left before being subtracted."}]},"doc://BigInt/documentation/BigInt/BigUInt/ExpressibleByExtendedGraphemeClusterLiteral-Implementations":{"abstract":[],"identifier":"doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/ExpressibleByExtendedGraphemeClusterLiteral-Implementations","url":"\/documentation\/bigint\/biguint\/expressiblebyextendedgraphemeclusterliteral-implementations","kind":"article","role":"collectionGroup","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","type":"topic"},"doc://BigInt/documentation/BigInt/BigUInt/randomInteger(withExactWidth:)":{"identifier":"doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/randomInteger(withExactWidth:)","url":"\/documentation\/bigint\/biguint\/randominteger(withexactwidth:)","abstract":[{"type":"text","text":"Create a big unsigned integer consisting of "},{"type":"codeVoice","code":"width-1"},{"type":"text","text":" uniformly distributed random bits followed by a one bit."}],"title":"randomInteger(withExactWidth:)","kind":"symbol","type":"topic","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"randomInteger"},{"kind":"text","text":"("},{"text":"withExactWidth","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:6BigInt0A4UIntV","kind":"typeIdentifier","text":"BigUInt"}]},"doc://BigInt/documentation/BigInt/BigUInt/subtracting(_:shiftedBy:)":{"role":"symbol","type":"topic","identifier":"doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/subtracting(_:shiftedBy:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"subtracting"},{"text":"(","kind":"text"},{"text":"BigUInt","kind":"typeIdentifier","preciseIdentifier":"s:6BigInt0A4UIntV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"shiftedBy"},{"kind":"text","text":": "},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:6BigInt0A4UIntV","text":"BigUInt"}],"title":"subtracting(_:shiftedBy:)","url":"\/documentation\/bigint\/biguint\/subtracting(_:shiftedby:)","abstract":[{"text":"Subtract ","type":"text"},{"type":"codeVoice","code":"b"},{"text":" from this integer, and return the difference.","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"b"},{"text":" is shifted ","type":"text"},{"type":"codeVoice","code":"shift"},{"text":" digits to the left before being subtracted.","type":"text"}]},"doc://BigInt/SQ":{"identifier":"doc:\/\/BigInt\/SQ","title":"Swift.Equatable","type":"unresolvable"},"doc://BigInt/Se":{"identifier":"doc:\/\/BigInt\/Se","title":"Swift.Decodable","type":"unresolvable"},"doc://BigInt/documentation/BigInt/BigUInt/decrement(shiftedBy:)":{"kind":"symbol","type":"topic","identifier":"doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/decrement(shiftedBy:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"decrement"},{"text":"(","kind":"text"},{"text":"shiftedBy","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":")","kind":"text"}],"title":"decrement(shiftedBy:)","url":"\/documentation\/bigint\/biguint\/decrement(shiftedby:)","role":"symbol","abstract":[{"type":"text","text":"Decrement this integer by one."}]},"doc://BigInt/documentation/BigInt/BigUInt/init(words:)-2g41y":{"kind":"symbol","abstract":[],"identifier":"doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/init(words:)-2g41y","role":"symbol","title":"init(words:)","type":"topic","fragments":[{"kind":"identifier","text":"init"},{"text":"<","kind":"text"},{"text":"Words","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"words","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Words","kind":"typeIdentifier"},{"text":")","kind":"text"}],"url":"\/documentation\/bigint\/biguint\/init(words:)-2g41y"},"doc://BigInt/documentation/BigInt/BigUInt/Decodable-Implementations":{"kind":"article","role":"collectionGroup","title":"Decodable Implementations","abstract":[],"url":"\/documentation\/bigint\/biguint\/decodable-implementations","type":"topic","identifier":"doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/Decodable-Implementations"},"doc://BigInt/documentation/BigInt/BigUInt/Equatable-Implementations":{"kind":"article","identifier":"doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/Equatable-Implementations","url":"\/documentation\/bigint\/biguint\/equatable-implementations","role":"collectionGroup","title":"Equatable Implementations","type":"topic","abstract":[]},"doc://BigInt/documentation/BigInt/BigUInt/subtractingReportingOverflow(_:)":{"identifier":"doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/subtractingReportingOverflow(_:)","abstract":[{"text":"Subtracts ","type":"text"},{"code":"other","type":"codeVoice"},{"type":"text","text":" from "},{"type":"codeVoice","code":"self"},{"type":"text","text":", returning the result and a flag indicating arithmetic overflow."}],"url":"\/documentation\/bigint\/biguint\/subtractingreportingoverflow(_:)","title":"subtractingReportingOverflow(_:)","kind":"symbol","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"subtractingReportingOverflow"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:6BigInt0A4UIntV","text":"BigUInt","kind":"typeIdentifier"},{"text":") -> (partialValue","kind":"text"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:6BigInt0A4UIntV","kind":"typeIdentifier","text":"BigUInt"},{"kind":"text","text":", overflow"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":")","kind":"text"}]},"doc://BigInt/s43ExpressibleByExtendedGraphemeClusterLiteralP":{"identifier":"doc:\/\/BigInt\/s43ExpressibleByExtendedGraphemeClusterLiteralP","title":"Swift.ExpressibleByExtendedGraphemeClusterLiteral","type":"unresolvable"},"doc://BigInt/documentation/BigInt/BigUInt/compare(_:_:)":{"identifier":"doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/compare(_:_:)","abstract":[{"text":"Compare ","type":"text"},{"type":"codeVoice","code":"a"},{"text":" to ","type":"text"},{"type":"codeVoice","code":"b"},{"type":"text","text":" and return an "},{"type":"codeVoice","code":"NSComparisonResult"},{"text":" indicating their order.","type":"text"}],"url":"\/documentation\/bigint\/biguint\/compare(_:_:)","title":"compare(_:_:)","kind":"symbol","type":"topic","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"compare"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:6BigInt0A4UIntV","text":"BigUInt"},{"kind":"text","text":", "},{"text":"BigUInt","kind":"typeIdentifier","preciseIdentifier":"s:6BigInt0A4UIntV"},{"kind":"text","text":") -> "},{"preciseIdentifier":"c:@E@NSComparisonResult","text":"ComparisonResult","kind":"typeIdentifier"}]},"doc://BigInt/documentation/BigInt/BigUInt/multiplyAndAdd(_:_:shiftedBy:)":{"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"multiplyAndAdd","kind":"identifier"},{"text":"(","kind":"text"},{"text":"BigUInt","preciseIdentifier":"s:6BigInt0A4UIntV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:6BigInt0A4UIntV","kind":"typeIdentifier","text":"BigUInt"},{"kind":"text","text":"."},{"preciseIdentifier":"s:6BigInt0A4UIntV4Worda","kind":"typeIdentifier","text":"Word"},{"text":", ","kind":"text"},{"text":"shiftedBy","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"kind":"text","text":")"}],"identifier":"doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/multiplyAndAdd(_:_:shiftedBy:)","url":"\/documentation\/bigint\/biguint\/multiplyandadd(_:_:shiftedby:)","role":"symbol","title":"multiplyAndAdd(_:_:shiftedBy:)","type":"topic","abstract":[{"type":"text","text":"Multiply "},{"code":"x","type":"codeVoice"},{"text":" by ","type":"text"},{"type":"codeVoice","code":"y"},{"type":"text","text":", and add the result to this integer, optionally shifted "},{"code":"shift","type":"codeVoice"},{"text":" words to the left.","type":"text"}]},"doc://BigInt/documentation/BigInt/BigUInt/greatestCommonDivisor(with:)":{"role":"symbol","title":"greatestCommonDivisor(with:)","identifier":"doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/greatestCommonDivisor(with:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"greatestCommonDivisor","kind":"identifier"},{"kind":"text","text":"("},{"text":"with","kind":"externalParam"},{"kind":"text","text":": "},{"text":"BigUInt","preciseIdentifier":"s:6BigInt0A4UIntV","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"BigUInt","kind":"typeIdentifier","preciseIdentifier":"s:6BigInt0A4UIntV"}],"url":"\/documentation\/bigint\/biguint\/greatestcommondivisor(with:)","type":"topic","abstract":[{"type":"text","text":"Returns the greatest common divisor of "},{"code":"self","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"b","type":"codeVoice"},{"text":".","type":"text"}],"kind":"symbol"},"doc://BigInt/documentation/BigInt":{"abstract":[],"title":"BigInt","type":"topic","kind":"symbol","url":"\/documentation\/bigint","role":"collection","identifier":"doc:\/\/BigInt\/documentation\/BigInt"},"doc://BigInt/documentation/BigInt/BigUInt/isZero":{"identifier":"doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/isZero","abstract":[{"text":"Return true iff this integer is zero.","type":"text"}],"url":"\/documentation\/bigint\/biguint\/iszero","title":"isZero","kind":"symbol","type":"topic","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"isZero"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}]},"doc://BigInt/documentation/BigInt/BigUInt/power(_:)":{"type":"topic","abstract":[{"type":"text","text":"Returns this integer raised to the power "},{"type":"codeVoice","code":"exponent"},{"text":".","type":"text"}],"kind":"symbol","url":"\/documentation\/bigint\/biguint\/power(_:)","title":"power(_:)","identifier":"doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/power(_:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"power","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"BigUInt","preciseIdentifier":"s:6BigInt0A4UIntV"}]},"doc://BigInt/documentation/BigInt/BigUInt/ExpressibleByIntegerLiteral-Implementations":{"kind":"article","identifier":"doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/ExpressibleByIntegerLiteral-Implementations","url":"\/documentation\/bigint\/biguint\/expressiblebyintegerliteral-implementations","role":"collectionGroup","title":"ExpressibleByIntegerLiteral Implementations","type":"topic","abstract":[]},"doc://BigInt/documentation/BigInt/BigUInt/AdditiveArithmetic-Implementations":{"kind":"article","identifier":"doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/AdditiveArithmetic-Implementations","url":"\/documentation\/bigint\/biguint\/additivearithmetic-implementations","role":"collectionGroup","title":"AdditiveArithmetic Implementations","type":"topic","abstract":[]},"doc://BigInt/documentation/BigInt/BigUInt/CustomStringConvertible-Implementations":{"kind":"article","identifier":"doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/CustomStringConvertible-Implementations","url":"\/documentation\/bigint\/biguint\/customstringconvertible-implementations","role":"collectionGroup","title":"CustomStringConvertible Implementations","abstract":[],"type":"topic"},"doc://BigInt/documentation/BigInt/BigUInt/Encodable-Implementations":{"role":"collectionGroup","url":"\/documentation\/bigint\/biguint\/encodable-implementations","title":"Encodable Implementations","abstract":[],"type":"topic","identifier":"doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/Encodable-Implementations","kind":"article"},"doc://BigInt/documentation/BigInt/BigUInt/BinaryInteger-Implementations":{"title":"BinaryInteger Implementations","role":"collectionGroup","url":"\/documentation\/bigint\/biguint\/binaryinteger-implementations","identifier":"doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/BinaryInteger-Implementations","kind":"article","type":"topic","abstract":[]},"doc://BigInt/s33ExpressibleByUnicodeScalarLiteralP":{"identifier":"doc:\/\/BigInt\/s33ExpressibleByUnicodeScalarLiteralP","title":"Swift.ExpressibleByUnicodeScalarLiteral","type":"unresolvable"},"doc://BigInt/Sj":{"identifier":"doc:\/\/BigInt\/Sj","title":"Swift.Numeric","type":"unresolvable"},"doc://BigInt/s27ExpressibleByIntegerLiteralP":{"identifier":"doc:\/\/BigInt\/s27ExpressibleByIntegerLiteralP","title":"Swift.ExpressibleByIntegerLiteral","type":"unresolvable"},"doc://BigInt/documentation/BigInt/BigUInt/CustomPlaygroundDisplayConvertible-Implementations":{"kind":"article","identifier":"doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/CustomPlaygroundDisplayConvertible-Implementations","url":"\/documentation\/bigint\/biguint\/customplaygrounddisplayconvertible-implementations","role":"collectionGroup","title":"CustomPlaygroundDisplayConvertible Implementations","type":"topic","abstract":[]},"doc://BigInt/documentation/BigInt/BigUInt/Numeric-Implementations":{"identifier":"doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/Numeric-Implementations","abstract":[],"url":"\/documentation\/bigint\/biguint\/numeric-implementations","title":"Numeric Implementations","kind":"article","type":"topic","role":"collectionGroup"},"doc://BigInt/documentation/BigInt/BigUInt/randomInteger(lessThan:)":{"title":"randomInteger(lessThan:)","identifier":"doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/randomInteger(lessThan:)","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"randomInteger"},{"text":"(","kind":"text"},{"text":"lessThan","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:6BigInt0A4UIntV","text":"BigUInt"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:6BigInt0A4UIntV","kind":"typeIdentifier","text":"BigUInt"}],"type":"topic","abstract":[{"type":"text","text":"Create a uniformly distributed random unsigned integer that’s less than the specified limit."}],"role":"symbol","url":"\/documentation\/bigint\/biguint\/randominteger(lessthan:)","kind":"symbol"},"doc://BigInt/documentation/BigInt/BigUInt/inverse(_:)":{"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"inverse"},{"text":"(","kind":"text"},{"text":"BigUInt","kind":"typeIdentifier","preciseIdentifier":"s:6BigInt0A4UIntV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:6BigInt0A4UIntV","text":"BigUInt"},{"kind":"text","text":"?"}],"identifier":"doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/inverse(_:)","url":"\/documentation\/bigint\/biguint\/inverse(_:)","role":"symbol","title":"inverse(_:)","type":"topic","abstract":[{"text":"Returns the ","type":"text"},{"identifier":"https:\/\/en.wikipedia.org\/wiki\/Extended_Euclidean_algorithm#Modular_integers","isActive":true,"type":"reference"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"text","text":"or "},{"code":"nil","type":"codeVoice"},{"type":"text","text":" if there is no such number."}]},"doc://BigInt/documentation/BigInt/BigUInt/directMultiplicationLimit":{"identifier":"doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/directMultiplicationLimit","abstract":[{"type":"text","text":"Multiplication switches to an asymptotically better recursive algorithm when arguments have more words than this limit."}],"url":"\/documentation\/bigint\/biguint\/directmultiplicationlimit","title":"directMultiplicationLimit","kind":"symbol","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"text":"directMultiplicationLimit","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"}]},"doc://BigInt/documentation/BigInt/BigUInt/isStrongProbablePrime(_:)":{"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"isStrongProbablePrime","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:6BigInt0A4UIntV","text":"BigUInt","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"identifier":"doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/isStrongProbablePrime(_:)","url":"\/documentation\/bigint\/biguint\/isstrongprobableprime(_:)","role":"symbol","title":"isStrongProbablePrime(_:)","type":"topic","abstract":[{"type":"text","text":"Returns true iff this integer passes the "},{"identifier":"https:\/\/en.wikipedia.org\/wiki\/Probable_prime","isActive":true,"type":"reference"},{"text":" for the specified base.","type":"text"}]},"doc://BigInt/documentation/BigInt/BigUInt/multiplied(by:)":{"abstract":[{"type":"text","text":"Multiply this integer by "},{"type":"codeVoice","code":"y"},{"type":"text","text":" and return the result."}],"identifier":"doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/multiplied(by:)","kind":"symbol","title":"multiplied(by:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"multiplied"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"by"},{"kind":"text","text":": "},{"text":"BigUInt","kind":"typeIdentifier","preciseIdentifier":"s:6BigInt0A4UIntV"},{"kind":"text","text":") -> "},{"text":"BigUInt","kind":"typeIdentifier","preciseIdentifier":"s:6BigInt0A4UIntV"}],"url":"\/documentation\/bigint\/biguint\/multiplied(by:)","type":"topic","role":"symbol"},"doc://BigInt/documentation/BigInt/BigUInt/init()-sbkm":{"role":"symbol","url":"\/documentation\/bigint\/biguint\/init()-sbkm","title":"init()","abstract":[{"type":"text","text":"Initializes a new BigUInt with value 0."}],"fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"kind":"symbol","identifier":"doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/init()-sbkm","type":"topic"},"doc://BigInt/Sz":{"identifier":"doc:\/\/BigInt\/Sz","title":"Swift.BinaryInteger","type":"unresolvable"},"doc://BigInt/documentation/BigInt/BigUInt/UnsignedInteger-Implementations":{"url":"\/documentation\/bigint\/biguint\/unsignedinteger-implementations","identifier":"doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/UnsignedInteger-Implementations","title":"UnsignedInteger Implementations","abstract":[],"type":"topic","kind":"article","role":"collectionGroup"},"doc://BigInt/documentation/BigInt/BigUInt/squareRoot()":{"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"squareRoot","kind":"identifier"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:6BigInt0A4UIntV","text":"BigUInt","kind":"typeIdentifier"}],"identifier":"doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/squareRoot()","url":"\/documentation\/bigint\/biguint\/squareroot()","role":"symbol","title":"squareRoot()","type":"topic","abstract":[{"text":"Returns the integer square root of a big integer; i.e., the largest integer whose square isn’t greater than ","type":"text"},{"code":"value","type":"codeVoice"},{"type":"text","text":"."}]},"doc://BigInt/s18AdditiveArithmeticP":{"type":"unresolvable","identifier":"doc:\/\/BigInt\/s18AdditiveArithmeticP","title":"Swift.AdditiveArithmetic"},"doc://BigInt/SE":{"type":"unresolvable","identifier":"doc:\/\/BigInt\/SE","title":"Swift.Encodable"},"doc://BigInt/documentation/BigInt/BigUInt/multiply(byWord:)":{"identifier":"doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/multiply(byWord:)","abstract":[{"type":"text","text":"Multiply this big integer by a single word, and store the result in place of the original big integer."}],"url":"\/documentation\/bigint\/biguint\/multiply(byword:)","title":"multiply(byWord:)","kind":"symbol","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"multiply","kind":"identifier"},{"kind":"text","text":"("},{"text":"byWord","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:6BigInt0A4UIntV","kind":"typeIdentifier","text":"BigUInt"},{"kind":"text","text":"."},{"preciseIdentifier":"s:6BigInt0A4UIntV4Worda","kind":"typeIdentifier","text":"Word"},{"text":")","kind":"text"}]},"doc://BigInt/documentation/BigInt/BigUInt":{"identifier":"doc:\/\/BigInt\/documentation\/BigInt\/BigUInt","url":"\/documentation\/bigint\/biguint","abstract":[{"type":"text","text":"An arbitary precision unsigned integer type, also known as a “big integer”."}],"navigatorTitle":[{"text":"BigUInt","kind":"identifier"}],"kind":"symbol","title":"BigUInt","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BigUInt","kind":"identifier"}],"role":"symbol","type":"topic"}}}